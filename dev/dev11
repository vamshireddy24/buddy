
name: CI/CD Pipeline for Spring Boot Microservices

on:
  pull_request:
    branches:
      - main  # Run CI when a PR is raised to main branch
  push:
    branches:
      - main  # Deploy only after merging to main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run Unit Tests
        run: mvn test

      - name: SonarQube Code Quality Analysis
        run: mvn sonar:sonar -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Run only when merged into main

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/microservice:latest .
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_NAME }}.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/microservice:latest

      - name: Deploy to AKS using FluxCD
        run: |
          git config --global user.email "your-email@example.com"
          git config --global user.name "github-actions"
          git clone https://github.com/your-org/fluxCD-aks-dev.git
          cd fluxCD-aks-dev
          sed -i 's/tag:.*/tag: latest/' microservice/values.yaml
          git add .
          git commit -m "Updated image to latest"
          git push origin main

